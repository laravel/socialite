<?phpnamespace Laravel\Socialite\Two;use GuzzleHttp\ClientInterface;class TwitchProvider extends AbstractProvider implements ProviderInterface{    /**     * The scopes being requested.     *     * @var array     */    protected $scopes = ['user_read'];    /**     * {@inheritdoc}     */    protected function getAuthUrl($state)    {        return $this->buildAuthUrlFromBase('https://api.twitch.tv/kraken/oauth2/authorize', $state);    }    /**     * {@inheritdoc}     */    protected function getTokenUrl()    {        return 'https://api.twitch.tv/kraken/oauth2/token';    }    /**     * {@inheritdoc}     */    protected function getUserByToken($token)    {        $userUrl = 'https://api.twitch.tv/kraken/user';        $response = $this->getHttpClient()->get(            $userUrl, $this->getRequestOptions($token)        );        $user = json_decode($response->getBody(), true);        return $user;    }    /**     * {@inheritdoc}     */    protected function mapUserToObject(array $user)    {        return (new User)->setRaw($user)->map([            'id' => $user['_id'], 'nickname' => $user['display_name'], 'name' => array_get($user, 'display_name'),            'email' => array_get($user, 'email'), 'avatar' => $user['logo'],        ]);    }    /**     * Get the POST fields for the token request.     *     * @param  string  $code     * @return array     */    protected function getTokenFields($code)    {        return [            'client_id' => $this->clientId, 'client_secret' => $this->clientSecret,            'code' => $code, 'redirect_uri' => $this->redirectUrl,            'grant_type' => 'authorization_code'        ];    }    /**     * Get the default options for an HTTP request.     *     * @return array     */    protected function getRequestOptions($token)    {        $headers =  [            'headers' => [                'Accept' => 'application/vnd.twitchtv.v3+json',            ],        ];        if ($token != null)            $headers['headers']['Authorization'] = 'OAuth ' . $token;        return $headers;    }}